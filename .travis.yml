language: cpp

addons:
  apt:
    packages:
      - docker-ce
  sonarcloud:
    organization: "wrench"
    token:
      secure: "a3gk/Phr7yPccMhzBp6LRwEkIXWwSMbeC20sm0N5O/eZ63gN+4sp371pQcUugoPIXBa1jLMeJLL0we950EY9/kFPMVTdscHJ1OOwrM98R65dTtayxLOhDf1D8GTnrOIdpuH9vMatIulRoW0TYUhD1Ay2wIJWToXAJRM4W3bgzAOfsaM45PYeR21tlIuplazZtNys7XFVBO/4F4dHvG1tC5DqiaAM6GBHWqFivdr6vOVzZRZ1+ZvNWv0qk0zy4uxF6W4C+kdBEqhX6Ad2/AuFxIEe5zwdgqMGIu3pSySLVmcrIAGUjBqkR84iQQjlbniSEUyv89jpTvyJ9D95UVlbJ9PB38SYLtfyboDgXb2Sm/M3v0gqPcF6ZX8RP9MaIBEN6HfB4XpPYN4CI6Pwkzkz+7gdFPIl6o5lqbjrvXkeccBH2pWIHrL33pBkIB/wQEKA552jZbB9DbU+A2lobJcFREO5PO5EPWh2WUFB9/C0cOTHPY2k8W92mvsjXlWNqmUTqKwQsldOLrX45sPTkFFCAMU0hOVrjL4qtVO8l/jJitRvtKqXe3ZK1dbZmJU1Rh2G7KDS6+m4t2kIgoxtYDOPdHft38s6NTo/639TPEisn2kLO4sjx/sk2KXh7ja6vKa/eNKMxUBLTbv0x28xMiKN/WEtSTzQKsLWpYLlMUNGUTM="

services:
  - docker

jobs:
  include:
    - stage: "Source Build and Test"
      name: "Ubuntu Xenial - g++-5"
      env: DIST=ubuntu-xenial COMPILER=gcc5 batsched=off
    - name: "Ubuntu Bionic - g++-7"
      env: DIST=ubuntu-bionic COMPILER=gcc7 batsched=off
    - name: "Ubuntu Bionic - g++-7 (batsched)"
      env: DIST=ubuntu-bionic COMPILER=gcc7-batsched batsched=on
    - name: "Ubuntu Bionic - clang-9"
      env: DIST=ubuntu-bionic COMPILER=clang9 batsched=off
    - name: "Ubuntu Focal - g++-9"
      env: DIST=ubuntu-focal COMPILER=gcc9 batsched=off
    - name: "Ubuntu Focal - clang-10"
      env: DIST=ubuntu-focal COMPILER=clang10 batsched=off
    - name: "Debian Stretch - g++-6"
      env: DIST=debian-stretch COMPILER=gcc6 batsched=off
    - name: "Debian Buster - g++-8"
      env: DIST=debian-buster COMPILER=gcc8 batsched=off

    - stage: "Documentation Build and Deployment"
      name: "Ubuntu Focal - g++-9"
      env: DIST=ubuntu-focal COMPILER=gcc9 batsched=off

    - stage: "Code Coverage"
      name: "Ubuntu Focal - g++-9"
      env: DIST=ubuntu-focal COMPILER=gcc9 batsched=off

    - stage: "Code Quality Analysis"
      name: "Ubuntu Focal - g++-9"
      env: DIST=ubuntu-focal COMPILER=gcc9 batsched=off

before_install:
  # install container
  - docker pull wrenchproject/wrench-build:${DIST}-${COMPILER};
  - docker run -m 4g -d -t --name=wrench wrenchproject/wrench-build:${DIST}-${COMPILER} bash;
  - docker exec -it wrench git clone https://github.com/wrench-project/wrench;
  # if not the master branch, switch to branch
  - if [[ "$TRAVIS_BRANCH" != "master" ]]; then
      docker exec -w /home/wrench/wrench -it wrench git checkout ${TRAVIS_BRANCH};
    fi
  - docker exec -it wrench mkdir wrench/build;

script:
  # build and test wrench
  - if [[ "$TRAVIS_BUILD_STAGE_NAME" == "Source Build and Test" ]] || [[ "$TRAVIS_BUILD_STAGE_NAME" == "Code Coverage" ]]; then
      docker exec -w /home/wrench/wrench/build -it wrench cmake -DENABLE_BATSCHED=${batsched} -DCMAKE_VERBOSE_MAKEFILE=ON ..;
      docker exec -w /home/wrench/wrench/build -it wrench make all unit_tests;
      docker exec -w /home/wrench/wrench/build -it wrench ./unit_tests;
    fi
  # documentation build and deployment
  - if [[ "$TRAVIS_BUILD_STAGE_NAME" == "Documentation Build and Deployment" ]]; then
      docker exec -w /home/wrench/wrench/build -it wrench cmake -DENABLE_BATSCHED=${batsched} -DCMAKE_VERBOSE_MAKEFILE=ON ..;
      docker exec -w /home/wrench/wrench/build -it wrench make doc;
      docker cp wrench:/home/wrench/wrench/docs .;
      cp -R ./docs/wrench-doc $HOME/gh-pages-to-deploy;
    fi
  # code coverage
  - if [[ "$TRAVIS_BUILD_STAGE_NAME" == "Code Coverage" ]] && [[ "$TRAVIS_BRANCH" == "master" ]]; then
      docker exec -w /home/wrench/wrench/build -it wrench lcov --directory . --capture --output-file coverage.info;
      docker exec -w /home/wrench/wrench/build -it wrench lcov --remove coverage.info '*/test/*' '*/examples/*' '*/include/*' --output-file coverage.info;
      docker cp wrench:/home/wrench/wrench/build/coverage.info .;
      bash <(curl -s https://codecov.io/bash) -f coverage.info -t ${CODECOV_TOKEN};
    fi
  # code quality analysis
  - if [[ "$TRAVIS_BUILD_STAGE_NAME" == "Code Quality Analysis" ]] && [[ "$TRAVIS_BRANCH" == "master" ]]; then
      docker exec -it wrench mkdir wrench/sonar;
      SONARPATH=$(dirname "`which build-wrapper-linux-x86-64`");
      docker cp $SONARPATH wrench:/home/wrench/wrench/sonar;
      docker exec -w /home/wrench/wrench/build -it wrench cmake -DENABLE_BATSCHED=${batsched} -DCMAKE_VERBOSE_MAKEFILE=ON ..;
      docker exec -w /home/wrench/wrench/build -it wrench ../sonar/build-wrapper-linux-x86/build-wrapper-linux-x86-64 --out-dir bw-output make all;
      docker cp /home/travis/.sonarscanner/sonar-scanner.zip wrench:/home/wrench/wrench;
      docker exec -w /home/wrench/wrench -it wrench unzip sonar-scanner.zip;
      docker exec -w /home/wrench/wrench -it wrench ./sonar-scanner-3.0.3.778/bin/sonar-scanner -Dsonar.cfamily.build-wrapper-output=build/bw-output -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=${SONAR_TOKEN};
    fi

deploy:
  provider: script
  script: bash .travis.publish
  on:
    branch: ${TRAVIS_BRANCH}

notifications:
  email:
    recipients:
      - wrench@mailman.isi.edu
    on_success: change
    on_failure: always
  slack:
    secure: iblNKGB18NrNSHWsonO6jLpjqUxI7MhBYDHEAJxhN7sRCY4l9m4MhHGrVAndimeE2mWGqfl7nz9LjpGVrlc7y6y/8pNgaNwk1x1PLacOBjNdf+ZFx2b3p9+vXdcOyK3FO096er2V/MBWxUKrHYc3v1/9M/k8mwUYVRDeFfNMia+wgEWyS0p7mB84Q99KmUA6yvXlK0NPG1n/NwIcXaca8z7db1TeaYCpbR6N1f6I2eGMlJRYP4cYFbg141Qr9hpi0bkxTT+cMAuO+1WBQagZrMxh/O3BS6BvUVswBrxCP8zBG3H1lttkVSsIz3IdDzGoAXRNqY8X5sfrZlLEE2GoWlz3xAJtQoT2WGoubtL+sV4tDORhIPh+E5pbXMMI7HYTKAntJylRAJiifLQ8Cwz/5uo3+wyv+i/tM2iV72+6ykXO9vuuRHssvOETrwjXRP1sKfOoe2aeu2sFJNSq3daPGZZR0m7bIaXEVIy9+STfOt0AuamZggtgbU4EfsqjICkvna1IBNOjVIN8THBiyhMfQFoS5ezvQfqMcoL/NLZS5WlMuinNaxutWp+Yg1i9+QpFa5G1DJZ1SKtmMkaSQZn8ITPzxduOXOBvU4VJhbpIonbp6cBysI+iTyrlIWE6mnzWeEJ4ctDLSfNc1zUWLQAALKdlwshNgCOlaScTickSclo=
