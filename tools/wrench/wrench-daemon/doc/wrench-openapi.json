{
  "openapi": "3.0.1",
  "info": {
    "title": "WRENCH REST API",
    "description": "Test for WRENCH",
    "termsOfService": "https://wrench-project.org/terms",
    "contact": {
      "email": "support@wrench-project.org"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "externalDocs": {
    "description": "Find out more about WRENCH",
    "url": "https://wrench-project.org/"
  },
  "servers": [
    {
      "url": "https://wrench-project.org/v1"
    }
  ],
  "tags": [
    {
      "name": "WRENCH",
      "description": "Everything about your simulations",
      "externalDocs": {
        "description": "Find out more about WRENCH",
        "url": "https://wrench-project.org/"
      }
    }
  ],
  "paths": {
    "/simulation/startSimulation": {
      "post": {
        "tags": [
          "WRENCH"
        ],
        "summary": "Start a new simulation",
        "operationId": "startSimulation",
        "requestBody": {
          "description": "Start a new simulation based on a platform file and a controller hostname.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SimulationInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimulationReturn"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input",
            "content": {}
          }
        }
      }
    },
    "/simulation/{simid}/getTime": {
      "get": {
        "tags": [
          "WRENCH"
        ],
        "summary": "Retrieve the current simulated time.",
        "operationId": "getSimulationTime",
        "parameters": [
          {
            "name": "simid",
            "in": "path",
            "description": "ID of the simulation",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeResponse"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input",
            "content": {}
          }
        }
      }
    },
    "/simulation/{simid}/advanceTime": {
      "put": {
        "tags": [
          "WRENCH"
        ],
        "summary": "Retrieve the current simulated time.",
        "operationId": "advanceTime",
        "parameters": [
          {
            "name": "simid",
            "in": "path",
            "description": "ID of the simulation",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Input to start a new service.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "increment": {
                    "type": "number",
                    "format": "integer",
                    "description": "Increment in seconds."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponse"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input",
            "content": {}
          }
        }
      }
    },
    "/simulation/{simid}/createTask": {
      "put": {
        "tags": [
          "WRENCH"
        ],
        "summary": "Create a new task.",
        "operationId": "createTask",
        "parameters": [
          {
            "name": "simid",
            "in": "path",
            "description": "ID of the simulation",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Task characteristics.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Task"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponse"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input",
            "content": {}
          }
        }
      }
    },
    "/simulation/{simid}/waitForNextSimulationEvent": {
      "get": {
        "tags": [
          "WRENCH"
        ],
        "summary": "Retrieve the next simulation event.",
        "operationId": "waitForNextSimulationEvent",
        "parameters": [
          {
            "name": "simid",
            "in": "path",
            "description": "ID of the simulation",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input",
            "content": {}
          }
        }
      }
    },
    "/simulation/{simid}/simulationEvents": {
      "get": {
        "tags": [
          "WRENCH"
        ],
        "summary": "Retrieve all simulation events since last time we checked.",
        "operationId": "getSimulationEvents",
        "parameters": [
          {
            "name": "simid",
            "in": "path",
            "description": "ID of simulation",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventList"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input",
            "content": {}
          }
        }
      }
    },
    "/simulation/{simid}/hostnames": {
      "get": {
        "tags": [
          "WRENCH"
        ],
        "summary": "Retrieve the names of all hosts in the simulated platform.",
        "operationId": "getAllHostnames",
        "parameters": [
          {
            "name": "simid",
            "in": "path",
            "description": "ID of simulation",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HostnameList"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input",
            "content": {}
          }
        }
      }
    },
    "/simulation/{simid}/tasks/{tid}/inputFiles": {
      "get": {
        "tags": [
          "WRENCH"
        ],
        "summary": "Retrieve task's input files",
        "deprecated": false,
        "operationId": "getTaskInputFiles",
        "parameters": [
          {
            "name": "simid",
            "in": "path",
            "description": "ID of the simulation",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tid",
            "in": "path",
            "description": "ID of the task",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileList"
                }
              }
            }
          },
          "404": {
            "description": "Task not found",
            "content": {}
          },
          "405": {
            "description": "Invalid input",
            "content": {}
          }
        }
      }
    },
    "/simulation/{simid}/tasks/{tid}/addInputFile": {
      "put": {
        "tags": [
          "WRENCH"
        ],
        "summary": "Add an input file to a task",
        "deprecated": false,
        "operationId": "addInputFile",
        "parameters": [
          {
            "name": "simid",
            "in": "path",
            "description": "ID of the simulation",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tid",
            "in": "path",
            "description": "ID of the task",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Input file.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "file": {
                    "type": "string",
                    "description": "The file's ID"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponse"
                }
              }
            }
          },
          "404": {
            "description": "Task not found",
            "content": {}
          },
          "405": {
            "description": "Invalid input",
            "content": {}
          }
        }
      }
    },
    "/simulation/{simid}/tasks/{tid}/outputFiles": {
      "get": {
        "tags": [
          "WRENCH"
        ],
        "summary": "Retrieve task's output files",
        "deprecated": false,
        "operationId": "getTaskOutputFiles",
        "parameters": [
          {
            "name": "simid",
            "in": "path",
            "description": "ID of the simulation",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tid",
            "in": "path",
            "description": "ID of the task",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileList"
                }
              }
            }
          },
          "404": {
            "description": "Task not found",
            "content": {}
          },
          "405": {
            "description": "Invalid input",
            "content": {}
          }
        }
      }
    },
    "/simulation/{simid}/tasks/{tid}/addOutputFile": {
      "put": {
        "tags": [
          "WRENCH"
        ],
        "summary": "Add an output file to a task",
        "deprecated": false,
        "operationId": "addOutputFile",
        "parameters": [
          {
            "name": "simid",
            "in": "path",
            "description": "ID of the simulation",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tid",
            "in": "path",
            "description": "ID of the task",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Job characteristics.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "file": {
                    "type": "string",
                    "description": "The file's ID"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponse"
                }
              }
            }
          },
          "404": {
            "description": "Task not found",
            "content": {}
          },
          "405": {
            "description": "Invalid input",
            "content": {}
          }
        }
      }
    },
    "/simulation/{simid}/inputFiles": {
      "get": {
        "tags": [
          "WRENCH"
        ],
        "summary": "Return the list of input files of the workflow.",
        "deprecated": false,
        "operationId": "getInputFiles",
        "parameters": [
          {
            "name": "simid",
            "in": "path",
            "description": "ID of the simulation",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileList"
                }
              }
            }
          },
          "404": {
            "description": "Task not found",
            "content": {}
          },
          "405": {
            "description": "Invalid input",
            "content": {}
          }
        }
      }
    },
    "/simulation/{simid}/addFile": {
      "put": {
        "tags": [
          "WRENCH"
        ],
        "summary": "Add a file to the workflow.",
        "deprecated": false,
        "operationId": "addFile",
        "parameters": [
          {
            "name": "simid",
            "in": "path",
            "description": "ID of the simulation",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Input to add a new file.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "name of the file"
                  },
                  "size": {
                    "type": "integer",
                    "description": "size of the file in bytes"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponse"
                }
              }
            }
          },
          "404": {
            "description": "Task not found",
            "content": {}
          },
          "405": {
            "description": "Invalid input",
            "content": {}
          }
        }
      }
    },
    "/simulation/{simid}/files/{file_id}/size": {
      "get": {
        "tags": [
          "WRENCH"
        ],
        "summary": "Get a file size.",
        "deprecated": false,
        "operationId": "getFileSize",
        "parameters": [
          {
            "name": "simid",
            "in": "path",
            "description": "ID of the simulation",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "file_id",
            "in": "path",
            "description": "Name of the file",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileSizeResponse"
                }
              }
            }
          },
          "404": {
            "description": "File not found",
            "content": {}
          },
          "405": {
            "description": "Invalid input",
            "content": {}
          }
        }
      }
    },
    "/simulation/{simid}/jobs/{job_name}/tasks": {
      "get": {
        "tags": [
          "WRENCH"
        ],
        "summary": "Retrieve job's tasks",
        "deprecated": false,
        "operationId": "getStandardJobTasks",
        "parameters": [
          {
            "name": "simid",
            "in": "path",
            "description": "ID of the simulation",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "job_name",
            "in": "path",
            "description": "ID of the job",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskList"
                }
              }
            }
          },
          "404": {
            "description": "Job not found",
            "content": {}
          },
          "405": {
            "description": "Invalid input",
            "content": {}
          }
        }
      }
    },
    "/simulation/{simid}/tasks/{name}/taskGetFlops": {
      "get": {
        "tags": [
          "WRENCH"
        ],
        "summary": "Get a task's flops",
        "deprecated": false,
        "operationId": "getTaskFlops",
        "parameters": [
          {
            "name": "simid",
            "in": "path",
            "description": "ID of the simulation",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "path",
            "description": "ID of the task",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskFlops"
                }
              }
            }
          },
          "404": {
            "description": "Job not found",
            "content": {}
          },
          "405": {
            "description": "Invalid input",
            "content": {}
          }
        }
      }
    },
    "/simulation/{simid}/tasks/{name}/taskGetMinNumCores": {
      "get": {
        "tags": [
          "WRENCH"
        ],
        "summary": "Get a task's minimum number of cores.",
        "deprecated": false,
        "operationId": "getTaskMinNumCores",
        "parameters": [
          {
            "name": "simid",
            "in": "path",
            "description": "ID of the simulation",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "path",
            "description": "ID of the task",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskCores"
                }
              }
            }
          },
          "404": {
            "description": "Job not found",
            "content": {}
          },
          "405": {
            "description": "Invalid input",
            "content": {}
          }
        }
      }
    },
    "/simulation/{simid}/tasks/{name}/taskGetMaxNumCores": {
      "get": {
        "tags": [
          "WRENCH"
        ],
        "summary": "Get a task's maximum number of cores.",
        "deprecated": false,
        "operationId": "getTaskMaxNumCores",
        "parameters": [
          {
            "name": "simid",
            "in": "path",
            "description": "ID of the simulation",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "path",
            "description": "ID of the task",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskCores"
                }
              }
            }
          },
          "404": {
            "description": "Job not found",
            "content": {}
          },
          "405": {
            "description": "Invalid input",
            "content": {}
          }
        }
      }
    },
    "/simulation/{simid}/tasks/{name}/taskGetMemory": {
      "get": {
        "tags": [
          "WRENCH"
        ],
        "summary": "Get a task's memory requirement.",
        "deprecated": false,
        "operationId": "getTaskMemory",
        "parameters": [
          {
            "name": "simid",
            "in": "path",
            "description": "ID of the simulation",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "path",
            "description": "ID of the task",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskMem"
                }
              }
            }
          },
          "404": {
            "description": "Job not found",
            "content": {}
          },
          "405": {
            "description": "Invalid input",
            "content": {}
          }
        }
      }
    },
    "/simulation/{simid}/tasks/{name}/taskGetStartDate": {
      "get": {
        "tags": [
          "WRENCH"
        ],
        "summary": "Get a task's start date.",
        "deprecated": false,
        "operationId": "getTaskStartDate",
        "parameters": [
          {
            "name": "simid",
            "in": "path",
            "description": "ID of the simulation",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "path",
            "description": "ID of the task",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeResponse"
                }
              }
            }
          },
          "404": {
            "description": "Job not found",
            "content": {}
          },
          "405": {
            "description": "Invalid input",
            "content": {}
          }
        }
      }
    },
    "/simulation/{simid}/tasks/{name}/taskGetEndDate": {
      "get": {
        "tags": [
          "WRENCH"
        ],
        "summary": "Get a task's end date.",
        "deprecated": false,
        "operationId": "getTaskEndDate",
        "parameters": [
          {
            "name": "simid",
            "in": "path",
            "description": "ID of the simulation",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "path",
            "description": "ID of the task",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeResponse"
                }
              }
            }
          },
          "404": {
            "description": "Job not found",
            "content": {}
          },
          "405": {
            "description": "Invalid input",
            "content": {}
          }
        }
      }
    },
    "/simulation/{simid}/createStandardJob": {
      "put": {
        "tags": [
          "WRENCH"
        ],
        "summary": "Create a new standard job.",
        "operationId": "createStandardJob",
        "parameters": [
          {
            "name": "simid",
            "in": "path",
            "description": "ID of the simulation",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Job specification.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StandardJob"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobResponse"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input",
            "content": {}
          }
        }
      }
    },
    "/simulation/{simid}/jobs/{job_name}/submit": {
      "post": {
        "tags": [
          "WRENCH"
        ],
        "summary": "Submit a standard job.",
        "operationId": "submitStandardJob",
        "parameters": [
          {
            "name": "simid",
            "in": "path",
            "description": "ID of the simulation",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "job_name",
            "in": "path",
            "description": "ID of the job",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Job characteristics.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "compute_service_name": {
                    "type": "string",
                    "description": "The compute service's name"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponse"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input",
            "content": {}
          }
        }
      }
    },
    "/simulation/{simid}/addBareMetalComputeService": {
      "post": {
        "tags": [
          "WRENCH"
        ],
        "summary": "Create and start a bare-metal compute service.",
        "operationId": "addBareMetalComputeService",
        "parameters": [
          {
            "name": "simid",
            "in": "path",
            "description": "ID of the simulation",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Input to start a new service.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "head_host": {
                    "type": "string",
                    "description": "name of the (simulated) host on which the compute service should run"
                  },
                  "resources": {
                    "type": "object",
                    "description": "compute resources as a dict of hostnames where values are tuples of #cores and ram in bytes"
                  },
                  "scratch_space": {
                    "type": "string",
                    "description": "the compute service’s scratch space’s mount point (”” means none)"
                  },
                  "property_list": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string"
                      },
                      "text": {
                        "type": "string"
                      }
                    },
                    "description": "a property list ({} means “use all defaults”)"
                  },
                  "message_payload_list": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string"
                      },
                      "text": {
                        "type": "number"
                      }
                    },
                    "description": "a message payload list ({} means “use all defaults”)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceResponse"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input",
            "content": {}
          }
        }
      }
    },
    "/simulation/{simid}/addCloudComputeService": {
      "post": {
        "tags": [
          "WRENCH"
        ],
        "summary": "Create and start a cloud compute service.",
        "operationId": "addCloudComputeService",
        "parameters": [
          {
            "name": "simid",
            "in": "path",
            "description": "ID of the simulation",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Input to start a new service.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "head_host": {
                    "type": "string",
                    "description": "name of the (simulated) host on which the compute service should run"
                  },
                  "resources": {
                    "type": "object",
                    "description": "compute resources as a dict of hostnames where values are tuples of #cores and ram in bytes"
                  },
                  "scratch_space": {
                    "type": "string",
                    "description": "the compute service’s scratch space’s mount point (”” means none)"
                  },
                  "property_list": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string"
                      },
                      "text": {
                        "type": "string"
                      }
                    },
                    "description": "a property list ({} means “use all defaults”)"
                  },
                  "message_payload_list": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string"
                      },
                      "text": {
                        "type": "number"
                      }
                    },
                    "description": "a message payload list ({} means “use all defaults”)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceResponse"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input",
            "content": {}
          }
        }
      }
    },
    "/simulation/{simid}/supportsCompoundJobs": {
      "get": {
        "tags": [
          "WRENCH"
        ],
        "summary": "Returns true if the service supports compound jobs.",
        "operationId": "supportsCompoundJobs",
        "parameters": [
          {
            "name": "simid",
            "in": "path",
            "description": "ID of the simulation",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanResponse"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input",
            "content": {}
          }
        }
      }
    },
    "/simulation/{simid}/supportsPilotJobs": {
      "get": {
        "tags": [
          "WRENCH"
        ],
        "summary": "Returns true if the service supports pilot jobs.",
        "operationId": "supportsPilotJobs",
        "parameters": [
          {
            "name": "simid",
            "in": "path",
            "description": "ID of the simulation",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanResponse"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input",
            "content": {}
          }
        }
      }
    },
    "/simulation/{simid}/supportsStandardJobs": {
      "get": {
        "tags": [
          "WRENCH"
        ],
        "summary": "Returns true if the service supports standard jobs.",
        "operationId": "supportsStandardJobs",
        "parameters": [
          {
            "name": "simid",
            "in": "path",
            "description": "ID of the simulation",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanResponse"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input",
            "content": {}
          }
        }
      }
    },
    "/simulation/{simid}/addSimpleStorageService": {
      "post": {
        "tags": [
          "WRENCH"
        ],
        "summary": "Create and start a simple storage service.",
        "operationId": "addSimpleStorageService",
        "parameters": [
          {
            "name": "simid",
            "in": "path",
            "description": "ID of the simulation",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Input to start a new service.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "head_host": {
                    "type": "string",
                    "description": "The service's head host"
                  },
                  "mount_points": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "The service's mount points"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceResponse"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input",
            "content": {}
          }
        }
      }
    },
    "/simulation/{simid}/addFileRegistryService": {
      "post": {
        "tags": [
          "WRENCH"
        ],
        "summary": "Create and start a file registery service.",
        "operationId": "addFileRegistryService",
        "parameters": [
          {
            "name": "simid",
            "in": "path",
            "description": "ID of the simulation",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Input to start a new service.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "head_host": {
                    "type": "string",
                    "description": "The service's head host"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceResponse"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input",
            "content": {}
          }
        }
      }
    },
    "/simulation/{simid}/{storage_service_name}/createFileCopy": {
      "post": {
        "tags": [
          "WRENCH"
        ],
        "summary": "Create, ex nihilo, a copy of a file copy at a storage service.",
        "operationId": "createFileCopyAtStorageService",
        "parameters": [
          {
            "name": "simid",
            "in": "path",
            "description": "ID of the simulation",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "storage_service_name",
            "in": "path",
            "description": "The storage service's head host",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Input to start a new service.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "filename": {
                    "type": "string",
                    "description": "The file name"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponse"
                }
              }
            }
          },
          "404": {
            "description": "Simulation or storage service not found",
            "content": {}
          },
          "405": {
            "description": "Invalid input",
            "content": {}
          }
        }
      }
    },
    "/simulation/{simid}/{storage_service_name}/lookupFile": {
      "post": {
        "tags": [
          "WRENCH"
        ],
        "summary": "Check if a copy of a file is stored at a storage service.",
        "operationId": "lookupFileAtStorageService",
        "parameters": [
          {
            "name": "simid",
            "in": "path",
            "description": "ID of the simulation",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "storage_service_name",
            "in": "path",
            "description": "The storage service's head host",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Input to start a new service.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "filename": {
                    "type": "string",
                    "description": "The file name"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanResponse"
                }
              }
            }
          },
          "404": {
            "description": "Simulation or storage service not found",
            "content": {}
          },
          "405": {
            "description": "Invalid input",
            "content": {}
          }
        }
      }
    },
    "/simulation/{simid}/createVM": {
      "post": {
        "tags": [
          "WRENCH"
        ],
        "summary": "Create a VM on a cloud compute service.",
        "operationId": "createVM",
        "parameters": [
          {
            "name": "simid",
            "in": "path",
            "description": "ID of the simulation",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Input to start create a VM.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "service_name": {
                    "type": "string",
                    "description": "The cloud service name"
                  },
                  "num_cores": {
                    "type": "integer",
                    "description": "The required number of cores"
                  },
                  "ram_memory": {
                    "type": "number",
                    "description": "The required memory in bytes"
                  },
                  "property_list": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string"
                      },
                      "text": {
                        "type": "string"
                      }
                    },
                    "description": "a property list ({} means “use all defaults”)"
                  },
                  "message_payload_list": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string"
                      },
                      "text": {
                        "type": "number"
                      }
                    },
                    "description": "a message payload list ({} means “use all defaults”)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VMCreationResponse"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input",
            "content": {}
          }
        }
      }
    },
    "/simulation/{simid}/startVM": {
      "post": {
        "tags": [
          "WRENCH"
        ],
        "summary": "Starts a VM and get its associated bare metal compute service.",
        "operationId": "startVM",
        "parameters": [
          {
            "name": "simid",
            "in": "path",
            "description": "ID of the simulation",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Input to start a VM.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "service_name": {
                    "type": "string",
                    "description": "The cloud service's name"
                  },
                  "vm_name": {
                    "type": "string",
                    "description": "The name of the VM to start"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceResponse"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input",
            "content": {}
          }
        }
      }
    },
    "/simulation/{simid}/shutdownVM": {
      "post": {
        "tags": [
          "WRENCH"
        ],
        "summary": "Shutdown a VM.",
        "operationId": "shutdownVM",
        "parameters": [
          {
            "name": "simid",
            "in": "path",
            "description": "ID of the simulation",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Input to shutdown a VM.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "service_name": {
                    "type": "string",
                    "description": "The cloud service's name"
                  },
                  "vm_name": {
                    "type": "string",
                    "description": "The name of the VM to shutdown"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceResponse"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input",
            "content": {}
          }
        }
      }
    },
    "/simulation/{simid}/destroyVM": {
      "post": {
        "tags": [
          "WRENCH"
        ],
        "summary": "Destroy a VM.",
        "operationId": "destroyVM",
        "parameters": [
          {
            "name": "simid",
            "in": "path",
            "description": "ID of the simulation",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Input to destroy a VM.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "service_name": {
                    "type": "string",
                    "description": "The cloud service's name"
                  },
                  "vm_name": {
                    "type": "string",
                    "description": "The name of the VM to destroy"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponse"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input",
            "content": {}
          }
        }
      }
    },
    "/simulation/{simid}/isVMRunning": {
      "get": {
        "tags": [
          "WRENCH"
        ],
        "summary": "Method to check whether a VM is currently running.",
        "operationId": "isVMRunning",
        "parameters": [
          {
            "name": "simid",
            "in": "path",
            "description": "ID of the simulation",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Input to check if VM is running.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "service_name": {
                    "type": "string",
                    "description": "The cloud service's name"
                  },
                  "vm_name": {
                    "type": "string",
                    "description": "The name of the VM"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceResponse"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input",
            "content": {}
          }
        }
      }
    },
    "/simulation/{simid}/isVMDown": {
      "get": {
        "tags": [
          "WRENCH"
        ],
        "summary": "Method to check whether a VM is currently down.",
        "operationId": "isVMDown",
        "parameters": [
          {
            "name": "simid",
            "in": "path",
            "description": "ID of the simulation",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Input to check if VM is down.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "service_name": {
                    "type": "string",
                    "description": "The cloud service's name"
                  },
                  "vm_name": {
                    "type": "string",
                    "description": "The name of the VM"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceResponse"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input",
            "content": {}
          }
        }
      }
    },
    "/simulation/{simid}/suspendVM": {
      "post": {
        "tags": [
          "WRENCH"
        ],
        "summary": "Suspends a running VM.",
        "operationId": "suspendVM",
        "parameters": [
          {
            "name": "simid",
            "in": "path",
            "description": "ID of the simulation",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Input to suspend a VM.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "compute_service_name": {
                    "type": "string",
                    "description": "The cloud service's name"
                  },
                  "vm_name": {
                    "type": "string",
                    "description": "The name of the VM"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponse"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input",
            "content": {}
          }
        }
      }
    },
    "/simulation/{simid}/resumeVM": {
      "post": {
        "tags": [
          "WRENCH"
        ],
        "summary": "Resume a suspended VM.",
        "operationId": "resumeVM",
        "parameters": [
          {
            "name": "simid",
            "in": "path",
            "description": "ID of the simulation",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Input to resume a VM.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "compute_service_name": {
                    "type": "string",
                    "description": "The cloud service's name"
                  },
                  "vm_name": {
                    "type": "string",
                    "description": "The name of the VM"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponse"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input",
            "content": {}
          }
        }
      }
    },
    "/simulation/{simid}/isVMSuspended": {
      "get": {
        "tags": [
          "WRENCH"
        ],
        "summary": "Method to check whether a VM is currently suspended.",
        "operationId": "isVMSuspended",
        "parameters": [
          {
            "name": "simid",
            "in": "path",
            "description": "ID of the simulation",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Input to check if VM is suspended.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "service_name": {
                    "type": "string",
                    "description": "The cloud service's name"
                  },
                  "vm_name": {
                    "type": "string",
                    "description": "The name of the VM"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceResponse"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "SimulationInput": {
        "type": "object",
        "properties": {
          "platform_xml": {
            "type": "string",
            "description": "XML description of the simulated platform (using the SimGrid DTD)"
          },
          "controller_hostname": {
            "type": "string",
            "description": "Name of the host in the simulated platform that runs the simulation execution_controller"
          }
        },
        "required": [
          "platform_xml",
          "controller_hostname"
        ]
      },
      "SimulationReturn": {
        "type": "object",
        "properties": {
          "port_number": {
            "type": "integer",
            "description": "Port number to which all subsequent HTTP Post requests should be sent"
          },
          "wrench_api_request_success": {
            "type": "boolean",
            "description": "true if success, false if failure"
          },
          "failure_cause": {
            "type": "string",
            "description": "human-readable error message (if failure)"
          }
        }
      },
      "Task": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Task's name"
          },
          "flops": {
            "type": "number",
            "format": "number",
            "description": "The task's floating operations per second"
          },
          "min_num_cores": {
            "type": "number",
            "format": "unsigned long",
            "description": "The task's minimum number of cores"
          },
          "max_num_cores": {
            "type": "number",
            "format": "unsigned long",
            "description": "The task's maximum number of cores"
          },
          "memory": {
            "type": "number",
            "format": "number",
            "description": "The task's memory requirement"
          }
        }
      },
      "StandardJob": {
        "type": "object",
        "properties": {
          "tasks": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of IDs of tasks in the job"
          },
          "file_locations": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string"
              },
              "text": {
                "type": "string"
              }
            },
            "description": "Map of file IDs to storage service names (aka the list of file locations)."
          }
        }
      },
      "GenericResponse": {
        "type": "object",
        "properties": {
          "wrench_api_request_success": {
            "type": "boolean",
            "description": "true if success, false if failure"
          },
          "failure_cause": {
            "type": "string",
            "description": "human-readable error message (if failure)"
          }
        }
      },
      "ServiceResponse": {
        "type": "object",
        "properties": {
          "wrench_api_request_success": {
            "type": "boolean",
            "description": "true if success, false if failure"
          },
          "service_name": {
            "type": "string",
            "description": "The new service's name (if success)"
          },
          "failure_cause": {
            "type": "string",
            "description": "human-readable error message (if failure)"
          }
        }
      },
      "TimeResponse": {
        "type": "object",
        "properties": {
          "wrench_api_request_success": {
            "type": "boolean",
            "description": "true if success, false if failure"
          },
          "time": {
            "type": "number",
            "description": "A simulated date"
          },
          "failure_cause": {
            "type": "string",
            "description": "human-readable error message (if failure)"
          }
        }
      },
      "BooleanResponse": {
        "type": "object",
        "properties": {
          "wrench_api_request_success": {
            "type": "boolean",
            "description": "true if success, false if failure"
          },
          "result": {
            "type": "boolean",
            "description": "true or false"
          },
          "failure_cause": {
            "type": "string",
            "description": "human-readable error message (if failure)"
          }
        }
      },
      "VMCreationResponse": {
        "type": "object",
        "properties": {
          "wrench_api_request_success": {
            "type": "boolean",
            "description": "true if success, false if failure"
          },
          "vm_name": {
            "type": "string",
            "description": "The new VM's name (if success)"
          },
          "failure_cause": {
            "type": "string",
            "description": "human-readable error message (if failure)"
          }
        }
      },
      "Event": {
        "type": "object",
        "properties": {
          "event": {
            "type": "string",
            "description": "JSON event description"
          },
          "wrench_api_request_success": {
            "type": "boolean",
            "description": "true if success, false if failure"
          },
          "failure_cause": {
            "type": "string",
            "description": "human-readable error message (if failure)"
          }
        }
      },
      "EventList": {
        "type": "object",
        "properties": {
          "events": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of JSON event descriptions"
          },
          "wrench_api_request_success": {
            "type": "boolean",
            "description": "true if success, false if failure"
          },
          "failure_cause": {
            "type": "string",
            "description": "human-readable error message (if failure)"
          }
        }
      },
      "HostnameList": {
        "type": "object",
        "properties": {
          "hostnames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of host names"
          },
          "wrench_api_request_success": {
            "type": "boolean",
            "description": "true if success, false if failure"
          },
          "failure_cause": {
            "type": "string",
            "description": "human-readable error message (if failure)"
          }
        }
      },
      "TaskList": {
        "type": "object",
        "properties": {
          "tasks": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of task names"
          },
          "wrench_api_request_success": {
            "type": "boolean",
            "description": "true if success, false if failure"
          },
          "failure_cause": {
            "type": "string",
            "description": "human-readable error message (if failure)"
          }
        }
      },
      "FileList": {
        "type": "object",
        "properties": {
          "files": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of file names"
          },
          "wrench_api_request_success": {
            "type": "boolean",
            "description": "true if success, false if failure"
          },
          "failure_cause": {
            "type": "string",
            "description": "human-readable error message (if failure)"
          }
        }
      },
      "JobResponse": {
        "type": "object",
        "properties": {
          "job_name": {
            "type": "string",
            "description": "The new job's name."
          },
          "wrench_api_request_success": {
            "type": "boolean",
            "description": "true if success, false if failure"
          },
          "failure_cause": {
            "type": "string",
            "description": "human-readable error message (if failure)"
          }
        }
      },
      "FileSizeResponse": {
        "type": "object",
        "properties": {
          "size": {
            "type": "number",
            "description": "The file's size in bytes."
          },
          "wrench_api_request_success": {
            "type": "boolean",
            "description": "true if success, false if failure"
          },
          "failure_cause": {
            "type": "string",
            "description": "human-readable error message (if failure)"
          }
        }
      },
      "TaskFlops": {
        "type": "object",
        "properties": {
          "flops": {
            "type": "number",
            "description": "The task's flops."
          },
          "wrench_api_request_success": {
            "type": "boolean",
            "description": "true if success, false if failure"
          },
          "failure_cause": {
            "type": "string",
            "description": "human-readable error message (if failure)"
          }
        }
      },
      "TaskCores": {
        "type": "object",
        "properties": {
          "cores": {
            "type": "number",
            "description": "The task's minimum/maximum number of cores."
          },
          "wrench_api_request_success": {
            "type": "boolean",
            "description": "true if success, false if failure"
          },
          "failure_cause": {
            "type": "string",
            "description": "human-readable error message (if failure)"
          }
        }
      },
      "TaskMem": {
        "type": "object",
        "properties": {
          "memory": {
            "type": "number",
            "description": "The task's memory requirement in bytes."
          },
          "wrench_api_request_success": {
            "type": "boolean",
            "description": "true if success, false if failure"
          },
          "failure_cause": {
            "type": "string",
            "description": "human-readable error message (if failure)"
          }
        }
      }
    }
  }
}
